local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local itemsFolder = workspace:WaitForChild("Items")
local validNames = { Main = true, Handle = true, Coal = true, Meat = true }

local function isExcludedParent(name)
	return name:match("^Item Chest")
		or name == "Sapling"
		or name == "HumanoidRootPart"
		or name == "Mossy Coin"
end

local oldGui = player:FindFirstChild("PlayerGui"):FindFirstChild("PartMoverGui")
if oldGui then oldGui:Destroy() end

-- Screen GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PartMoverGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 300, 0, 450)
frame.Position = UDim2.new(0, 20, 0.5, -225)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BackgroundTransparency = 1
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Visible = true

-- Rounded corners
local corner = Instance.new("UICorner", frame)
corner.CornerRadius = UDim.new(0, 12)

-- Shadow effect
local shadow = Instance.new("ImageLabel", frame)
shadow.AnchorPoint = Vector2.new(0.5, 0.5)
shadow.Position = UDim2.new(0.5, 0, 0.5, 6)
shadow.Size = UDim2.new(1, 12, 1, 12)
shadow.Image = "rbxassetid://1316045217"
shadow.ImageTransparency = 0.5
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.BackgroundTransparency = 1
shadow.ZIndex = -1

-- Title Panel
local titlePanel = Instance.new("Frame", frame)
titlePanel.Size = UDim2.new(1, 0, 0, 40)
titlePanel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
titlePanel.BorderSizePixel = 0
Instance.new("UICorner", titlePanel).CornerRadius = UDim.new(0, 10)

local titleLabel = Instance.new("TextLabel", titlePanel)
titleLabel.Size = UDim2.new(1, 0, 1, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "ðŸ“¦ Move Items"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 20
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextStrokeTransparency = 0.8

-- Scroll Frame
local scrollingFrame = Instance.new("ScrollingFrame", frame)
scrollingFrame.Size = UDim2.new(1, -20, 1, -50)
scrollingFrame.Position = UDim2.new(0, 10, 0, 45)
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.BorderSizePixel = 0
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollingFrame.ScrollBarThickness = 5
scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

local uiList = Instance.new("UIListLayout", scrollingFrame)
uiList.SortOrder = Enum.SortOrder.LayoutOrder
uiList.Padding = UDim.new(0, 6)

local buttons = {}

local function createButtonFor(parentName, quantity)
	local button = Instance.new("TextButton")
	button.Parent = scrollingFrame
	button.Size = UDim2.new(1, 0, 0, 32)
	button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	button.TextColor3 = Color3.fromRGB(230, 230, 230)
	button.Font = Enum.Font.Gotham
	button.TextSize = 15
	button.Text = "â–¶ Move: " .. parentName .. " (" .. quantity .. ")"
	button.Name = parentName
	button.AutoButtonColor = false

	local round = Instance.new("UICorner", button)
	round.CornerRadius = UDim.new(0, 8)

	button.MouseEnter:Connect(function()
		TweenService:Create(button, TweenInfo.new(0.2), {
			BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		}):Play()
	end)
	button.MouseLeave:Connect(function()
		TweenService:Create(button, TweenInfo.new(0.2), {
			BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		}):Play()
	end)

	button.MouseButton1Click:Connect(function()
		local moveTo = hrp.Position + hrp.CFrame.LookVector * 6 + Vector3.new(0, 3, 0)
		local count = 0
		for _, instance in ipairs(itemsFolder:GetChildren()) do
			if instance:IsA("Model") and instance.Name == parentName and not isExcludedParent(instance.Name) then
				local origin = instance:GetModelCFrame().Position
				for _, part in ipairs(instance:GetDescendants()) do
					if part:IsA("BasePart") then
						local offset = part.Position - origin
						part.Position = moveTo + offset
					end
				end
				count += 1
			end
		end
		print(`[Moved] {count} model(s) named "{parentName}" to position {moveTo}`)
	end)

	buttons[parentName] = button
end

task.spawn(function()
	while true do
		local currentCounts = {}
		for _, part in ipairs(itemsFolder:GetDescendants()) do
			local parent = part.Parent
			if validNames[part.Name] and parent and not isExcludedParent(parent.Name) then
				currentCounts[parent.Name] = (currentCounts[parent.Name] or 0) + 1
			end
		end

		for name, count in pairs(currentCounts) do
			if buttons[name] then
				buttons[name].Text = "â–¶ Move: " .. name .. " (" .. count .. ")"
			else
				createButtonFor(name, count)
			end
		end

		for name, button in pairs(buttons) do
			if not currentCounts[name] then
				button:Destroy()
				buttons[name] = nil
			end
		end

		task.wait(1)
	end
end)

-- Fade logic
local isVisible = true
local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local function fadeGUI(show)
	if show then
		frame.Visible = true
		TweenService:Create(frame, tweenInfo, { BackgroundTransparency = 0.1 }):Play()
	else
		local fadeOut = TweenService:Create(frame, tweenInfo, { BackgroundTransparency = 1 })
		fadeOut:Play()
		fadeOut.Completed:Connect(function()
			frame.Visible = false
		end)
	end
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.B then
		isVisible = not isVisible
		fadeGUI(isVisible)
	end
end)

fadeGUI(true)
